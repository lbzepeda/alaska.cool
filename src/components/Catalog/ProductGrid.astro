---
import { ProductService } from "../../services/productApi";
import { brandMapping, type BrandKey, type ApiProduct } from "../../types/product";
import BrandFilter from "./BrandFilter.astro";

type Category = 'residential' | 'industrial' | 'fan';

interface Props {
  defaultCategory?: Category;
  selectedBrand?: BrandKey;
}

const { defaultCategory, selectedBrand } = Astro.props;

let apiProducts: ApiProduct[] = [];

// Obtener productos de la API
try {
  if (selectedBrand) {
    // Si hay una marca seleccionada, buscar por esa marca
    apiProducts = await ProductService.getProductsByBrand(brandMapping[selectedBrand].apiParam);
  } else {
    // Si no hay marca seleccionada, obtener todos los productos
    apiProducts = await ProductService.getProducts();
  }
} catch (error) {
  console.error('Error fetching products:', error);
}

// Filtrar productos por categoría si se proporciona
const filteredProducts = defaultCategory 
  ? apiProducts.filter(product => ProductService.categorizeProduct(product) === defaultCategory)
  : apiProducts;
---

<div class="max-w-[1400px] mx-auto px-4 sm:px-6">
  <div class="flex gap-8">
    <aside class="w-64 flex-shrink-0">
      <div class="sticky top-24">
        <div class="bg-white dark:bg-slate-800 rounded-lg shadow p-6">
          {!selectedBrand && <BrandFilter />}
          
          <h3 class="text-lg font-medium mb-4">Categorías</h3>
          <div class="space-y-2" id="category-filters">
            <label class="flex items-center">
              <input
                type="checkbox"
                value="residential"
                data-filter="category"
                class="mr-2"
                checked={defaultCategory === 'residential'}
              />
              <span>Residencial</span>
            </label>
            <label class="flex items-center">
              <input
                type="checkbox"
                value="industrial"
                data-filter="category"
                class="mr-2"
                checked={defaultCategory === 'industrial'}
              />
              <span>Industrial</span>
            </label>
            <label class="flex items-center">
              <input
                type="checkbox"
                value="fan"
                data-filter="category"
                class="mr-2"
                checked={defaultCategory === 'fan'}
              />
              <span>Ventilación</span>
            </label>
          </div>

          <div class="mt-6">
            <h3 class="text-lg font-medium mb-4">Voltaje</h3>
            <div class="space-y-2">
              <label class="flex items-center">
                <input type="checkbox" value="110V" data-filter="voltage" class="mr-2"/>
                <span>110V</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" value="220V" data-filter="voltage" class="mr-2"/>
                <span>220V</span>
              </label>
            </div>
          </div>

          <div class="mt-6">
            <h3 class="text-lg font-medium mb-4">BTU</h3>
            <div class="space-y-2">
              <label class="flex items-center">
                <input 
                  type="checkbox" 
                  value="12000"
                  data-filter="btu"
                  class="mr-2"
                />
                <span>12,000 BTU</span>
              </label>
              <label class="flex items-center">
                <input 
                  type="checkbox" 
                  value="18000"
                  data-filter="btu" 
                  class="mr-2"
                />
                <span>18,000 BTU</span>
              </label>
              <label class="flex items-center">
                <input 
                  type="checkbox" 
                  value="24000"
                  data-filter="btu"
                  class="mr-2"
                />
                <span>24,000 BTU</span>
              </label>
              <label class="flex items-center">
                <input 
                  type="checkbox" 
                  value="36000"
                  data-filter="btu"
                  class="mr-2"
                />
                <span>36,000 BTU</span>
              </label>
              <label class="flex items-center">
                <input 
                  type="checkbox" 
                  value="60000"
                  data-filter="btu"
                  class="mr-2"
                />
                <span>60,000 BTU</span>
              </label>
            </div>
           </div>
        </div>
      </div>
    </aside>

    <div class="flex-1">
      <div id="products-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredProducts.length > 0 ? (
          filteredProducts.map(product => {
            const btu = ProductService.extractBTU(product.display_name);
            const voltage = ProductService.extractVoltage(product.display_name);
            const category = ProductService.categorizeProduct(product);
            const totalStock = ProductService.getTotalStock(product);
            const price = ProductService.formatPrice(product.precio_venta);
            
            return (
              <div 
                class="product-card"
                data-id={product.producto_id}
                data-category={category}
                data-voltage={voltage}
                data-btu={btu}
                data-brand={selectedBrand || ''}
              >
                <div class="bg-white dark:bg-slate-800 rounded-lg shadow-sm p-4">
                  <div class="flex items-center gap-2 mb-3">
                    {selectedBrand && (
                      <img 
                        src={brandMapping[selectedBrand].logo} 
                        alt={brandMapping[selectedBrand].name}
                        class="h-8 w-auto"
                      />
                    )}
                    <span class="text-sm text-gray-500">{product.prod_codigo}</span>
                  </div>
                  
                  <h3 class="text-lg font-medium mb-2 line-clamp-2">
                    {product.display_name}
                  </h3>
                  
                  <div class="flex flex-wrap gap-2 mb-4">
                    {btu && (
                      <span class="px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full">
                        {parseInt(btu).toLocaleString()} BTU
                      </span>
                    )}
                    {voltage && (
                      <span class="px-2 py-1 text-xs bg-purple-100 text-purple-800 rounded-full">
                        {voltage}
                      </span>
                    )}
                    <span class="px-2 py-1 text-xs bg-green-100 text-green-800 rounded-full">
                      Stock: {totalStock}
                    </span>
                  </div>
                  
                  <div class="mb-4">
                    <p class="text-sm text-gray-600 dark:text-gray-400">
                      {product.categoria_producto_nombre}
                    </p>
                    <p class="text-sm text-gray-500">
                      {product.tipo_producto_nombre}
                    </p>
                  </div>
                  
                  <div class="flex justify-between items-center">
                    <div class="text-right">
                      <p class="text-lg font-semibold text-green-600">
                        {price}
                      </p>
                    </div>
                    <button class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors">
                      Ver detalles
                    </button>
                  </div>
                </div>
              </div>
            );
          })
        ) : (
          <div class="col-span-full text-center py-12">
            <p class="text-gray-500">No se encontraron productos</p>
          </div>
        )}
      </div>
    </div>
  </div>
</div>

<script>
let filters: {
  categories: string[],
  voltages: string[],
  btus: number[],
  brands: string[]
} = {
  categories: [],
  voltages: [],
  btus: [],
  brands: []
};

function updateFilters() {
  const categoryInputs = document.querySelectorAll('[data-filter="category"]');
  const voltageInputs = document.querySelectorAll('[data-filter="voltage"]');
  const btuInputs = document.querySelectorAll('[data-filter="btu"]');
  const brandInputs = document.querySelectorAll('[data-filter="brand"]');

  filters = {
    categories: Array.from(categoryInputs)
      .filter((input) => (input as HTMLInputElement).checked)
      .map((input) => (input as HTMLInputElement).value),
    voltages: Array.from(voltageInputs)
      .filter((input) => (input as HTMLInputElement).checked)
      .map((input) => (input as HTMLInputElement).value),
    btus: Array.from(btuInputs)
      .filter((input) => (input as HTMLInputElement).checked)
      .map((input) => parseInt((input as HTMLInputElement).value)),
    brands: Array.from(brandInputs)
      .filter((input) => (input as HTMLInputElement).checked)
      .map((input) => (input as HTMLInputElement).value)
  };

  applyFilters();
}

function applyFilters() {
  const cards = document.querySelectorAll('.product-card');
  
  // Handle brand filter changes with page navigation
  const brandFilters = filters.brands.filter(b => b !== '');
  if (brandFilters.length === 1) {
    // Navigate to brand page
    window.location.href = `/catalogo/marca/${brandFilters[0]}`;
    return;
  } else if (brandFilters.length === 0 && filters.brands.includes('')) {
    // Navigate back to general catalog if "all brands" is selected
    const currentPath = window.location.pathname;
    if (currentPath.includes('/marca/')) {
      window.location.href = '/catalogo';
      return;
    }
  }
  
  cards.forEach(card => {
    const category = card.getAttribute('data-category');
    const voltage = card.getAttribute('data-voltage');
    const btu = parseInt(card.getAttribute('data-btu') || '0');
    const brand = card.getAttribute('data-brand');

    const matchesCategory = filters.categories.length === 0 || (category && filters.categories.includes(category));
    const matchesVoltage = filters.voltages.length === 0 || (voltage && filters.voltages.includes(voltage));
    const matchesBTU = filters.btus.length === 0 || (btu && filters.btus.includes(btu));
    const matchesBrand = filters.brands.length === 0 || filters.brands.includes('') || (brand && filters.brands.includes(brand));

    card.classList.toggle('hidden', !(matchesCategory && matchesVoltage && matchesBTU && matchesBrand));
  });
}

  // Event listeners
  document.addEventListener('DOMContentLoaded', () => {
    const filterInputs = document.querySelectorAll('[data-filter]');
    filterInputs.forEach(input => {
      input.addEventListener('change', updateFilters);
      input.addEventListener('input', updateFilters);
    });

    // Inicializa los filtros
    updateFilters();
  });
</script>