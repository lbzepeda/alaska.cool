---
// Componente para manejar la persistencia del idioma
---

<script>
  function initLanguagePersistence() {
    const currentPath = window.location.pathname;
    const preferredLang = localStorage.getItem('preferred-language');
    
    // Si hay un idioma preferido guardado y no estamos ya en esa URL
    if (preferredLang && preferredLang !== 'es') {
      // Si estamos en la versión española de una página, redirigir a la versión en inglés
      if (!currentPath.startsWith('/en/') && currentPath !== '/') {
        window.location.href = `/en${currentPath}`;
      } else if (currentPath === '/' && preferredLang === 'en') {
        window.location.href = '/en/';
      }
    } else if (preferredLang === 'es' && currentPath.startsWith('/en/')) {
      // Si el idioma preferido es español pero estamos en inglés, redirigir
      const spanishPath = currentPath.replace('/en', '') || '/';
      window.location.href = spanishPath;
    }

    // Interceptar clicks en enlaces de idioma para preservar scroll
    document.addEventListener('click', (event) => {
      const target = event.target as HTMLElement;
      const link = target.closest('a[role="menuitem"]') as HTMLAnchorElement;
      
      if (link && link.href) {
        event.preventDefault();
        
        const url = new URL(link.href);
        const isEnglish = url.pathname.startsWith('/en/');
        const language = isEnglish ? 'en' : 'es';
        
        // Guardar preferencia de idioma
        localStorage.setItem('preferred-language', language);
        
        // Usar replaceState para cambiar la URL sin navegar
        history.replaceState(null, '', link.href);
        
        // Forzar recarga del contenido manteniendo el scroll
        window.location.reload();
      }
    });

    // Interceptar el evento de beforeunload para preservar scroll
    let scrollBeforeUnload = null;
    window.addEventListener('beforeunload', () => {
      scrollBeforeUnload = {
        x: window.scrollX,
        y: window.scrollY
      };
      sessionStorage.setItem('scroll-before-reload', JSON.stringify(scrollBeforeUnload));
    });

    // Restaurar scroll después de reload
    window.addEventListener('load', () => {
      const savedScroll = sessionStorage.getItem('scroll-before-reload');
      if (savedScroll) {
        try {
          const position = JSON.parse(savedScroll);
          setTimeout(() => {
            window.scrollTo(position.x, position.y);
          }, 100);
          sessionStorage.removeItem('scroll-before-reload');
        } catch (error) {
          console.log('Error restaurando scroll:', error);
        }
      }
    });
  }

  // Ejecutar inmediatamente para redirección temprana
  initLanguagePersistence();
  
  // También ejecutar en navegación de Astro
  document.addEventListener('astro:after-swap', initLanguagePersistence);
</script>