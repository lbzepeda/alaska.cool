---
interface Props {
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  text?: string;
}

const { 
  size = 'md', 
  class: className = '', 
  text = 'Cargando...' 
} = Astro.props;

const sizeClasses = {
  sm: 'h-4 w-4',
  md: 'h-8 w-8',
  lg: 'h-12 w-12'
};

const textSizeClasses = {
  sm: 'text-sm',
  md: 'text-base',
  lg: 'text-lg'
};
---

<div class={`flex flex-col items-center justify-center space-y-2 ${className}`}>
  <div class="relative">
    <div class={`${sizeClasses[size]} animate-spin rounded-full border-2 border-gray-300 border-t-blue-600 dark:border-gray-600 dark:border-t-blue-400`}></div>
  </div>
  {text && (
    <p class={`${textSizeClasses[size]} text-gray-600 dark:text-gray-300 animate-pulse`}>
      {text}
    </p>
  )}
</div>

<style>
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
  
  .animate-spin {
    animation: spin 1s linear infinite;
  }
  
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: .5;
    }
  }
</style>